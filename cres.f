C  PROGRAM TO COMPUTE OBSERVATION DATA FOR OBSERVING THE CRESCENT MOON
C
C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C
C
C                    S. KAMAL ABDALI
C             MATHEMATICAL SCIENCES DEPARTMENT
C             RENSSELAER POLYTECHNIC INSTITUTE
C                   TROY, NEW YORK 12181
C
C                 (Program written in 1977)
C                (Last revised May 17, 1985)
C
C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C
C
C  THIS PROGRAM COMPUTES AND PRINTS OUT ALMANAC DATA FOR OBSERVING
C     THE MOON ON ANY EVENING OF PROBABLE NEW CRESCENT VISIBILITY.
C     IT ALSO DETERMINES THE LIKELIHOOD OF THE MOON'S VISIBILITY
C     AS "HIGH", "SOME", OR "POOR" BASED ON A COMBINATION OF CRITERIA
C     (SEE ATTACHED WRITE-UP.)
C  THE MOON'S POSITION IS COMPUTED FROM TRIG SERIES VALID FOR
C  THE PERIOD 1800-2100 APPROXIMATELY
C
C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C
C
C  INPUT DATA TO DESCRIBE TIME SHOULD BE ON UNIT 7, AS FOLLOWS.
C
C    A CARD GIVING THE DATE AND THE GREENWICH MEAN TIME OF THE MOST
C    RECENT ASTRONOMICAL "NEW MOON" WHICH HAS OCCURED BEFORE THE
C    EVENING FOR WHICH THE CRESCENT OBSERVATION DATA IS DESIRED.
C      COL.  1 -  4: YEAR A.D. (1800 THRU 2100)
C      COL.  5 -  8: MONTH (1 THRU 12)
C      COL.  9 - 12: DAY (0 THRU 31)
C      COL. 13 - 16: HOUR (0 THRU 23)
C      COL. 17 - 20: MINUTES (0 THRU 59)
C
C    ONE OR MORE CARDS EACH GIVING THE DATE(S) OF THE EVENING(S) FOR
C    WHICH THE CRESCENT OBSERVATION DATA IS DESIRED USING THE ABOVE
C    "NEW MOON" TIME.
C      COL.  1 -  4: YEAR A.D.
C      COL.  5 -  8: MONTH
C      COL.  9 - 12: DAY
C      COL. 15 - 34: TITLE WHICH WILL BE PRINTED ON DATA
C                    (E.G. "END OF MUHARRAM 1401")
C
C    A CARD CONTAINING A ZERO IN COLUMN 1 TO TERMINATE COMPUTATIONS
C    USING THE ABOVE "NEW MOON" TIME.
C
C    THE DATA ON LOGICAL UNIT 7 MAY HAVE MORE THAN ONE SET, EACH
C    OF WHICH CONTAINS FIRST A "NEW MOON" TIME, THEN SEVERAL DATES
C    FOR WHICH THE CRESCENT OBSERVATION DATA IS REQUIRED, AND
C    FINALLY A CARD CONTAINING A ZERO IN COLUMN 1. THE PROGRAM
C    EXECUTION TERMINATES WHEN AN END-OF-FILE IS ENCOUNTERED ON
C    UNIT 7.
C
C
C  INPUT DATA ABOUT LOCATIONS SHOULD BE PROVIDED ON LOGICAL UNIT 5,
C    WHICH SHOULD BE A TAPE OR DISK FILE CAPABLE OF BEING REWOUND.
C    FOR EACH LOCATION DESIRED, THE INPUT SHOULD INCLUDE THREE CARD
C    IMAGES WITH THE FOLLOWING DATA LAYOUT:
C
C    CARD 1:
C      COL. 1 - 28: NAME OF PLACE.
C
C    CARD 2:
C      COL.  1 -  4: DEGREES IN LATITUDE OF PLACE.
C      COL.  5 -  8: MINUTES IN LATITUDE OF PLACE.
C      COL.  9 - 12: DEGREES IN LONGITUDE OF PLACE.
C      COL. 13 - 16: MINUTES IN LONGITUDE OF PLACE.
C      COL. 17 - 23: ZONE TIME IN HOURS RELATIVE TO GMT (REAL NO.)
C XXXX COL. 25 - 32: ELEVATION OF PLACE IN FEET. (REAL NUMBER)
C
C      (N O T E : IF A LATITUDE OR LONGITUDE IS NEGATIVE, ONLY ITS
C                  DEGREES PART SHOULD BE PRECEDED BY A MINUS SIGN.)
C
C    CARD 3:
C      COL.  1 -  4: IGNORED
C      COL.  5 -  8: 1, IF DAYLIGHT SAVING TIME ADJUSTMENT REQUIRED,
C                    0, OTHERWISE.
C      (N O T E : THIS ADJUSTMENT IS DONE BY ADDING ONE HOUR TO ALL
C                    TIMES FROM THE FIRST SUNDAY IN APRIL TO THE LAST
C                    SUNDAY IN OCTOBER.
C
C  (N O T E : THE DATA ON CARDS 2 AND 3 ARE ALL INTEGER. THEY
C       SHOULD BE RIGHT-JUSTIFIED IN THEIR RESPECTIVE FIELDS.
C       EXCEPTION: LAST ITEM ON CARD 2 MUST CONTAIN A DECIMAL POINT.)
C
C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C
C
C  THE PROGRAM PRODUCES THE OUTPUT ON LOGICAL UNIT 6.
C
C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C
C
C
      REAL LAT,LONG,LONGH,TZONE
      REAL MGHA,MLHA,MDCL,MAZIM,MALT,MAZIM1,MALT1
      COMMON /MATH/ PI
      COMMON/POSN/LAT,LATD,LATM,LONG,LONGD,LONGM,TZONE
      COMMON /TIMES/ NDAY,STSUN,UTSUN,STMUN,STCVL,UTCVL
      COMMON /COORD/ SDCL,SLHA,SAZIM,MGHA,MDCL,MLHA,MALT,MAZIM,
     1   DAZIM,ANGDST,MAZIM1,MALT1
C     SKA 2011-08-01, CHANGED TYPES FOR NEWER FORTRAN VERSIONS
C     INTEGER NAME(5),NEWMUN(5),SGNLAT,SGNLNG,SGNDAZ,BEGDST,FINDST
C     INTEGER AMPM,HIJDAT(5)
C     INTEGER SYM(6),MONTH(12)
      INTEGER NEWMUN(5),BEGDST,FINDST
      CHARACTER*4 NAME(5)
      CHARACTER*1 SGNLAT,SGNLNG,SGNDAZ
      CHARACTER*1 AMPM
      CHARACTER*4 HIJDAT(5)
      CHARACTER*1 SYM(6)
      CHARACTER*3 MONTH(12)
      CHARACTER*8 POOR,SOME,HIGH,VSBLTY
      DATA SYM/'N','S','E','W','A','P'/
      DATA MONTH/'JAN','FEB','MAR','APR','MAY','JUN','JUL',
     1  'AUG','SEP','OCT','NOV','DEC' /
      DATA POOR/'  POOR  '/,SOME/' SOME   '/,HIGH/'HIGH    '/
      RADIAN(X)=X*PI/180.0
      DEGREE(IDEG,MINUTE)=ISIGN(MINUTE,IDEG)/60.0+IDEG
   10 REWIND 5
C  READ DATE AND TIME OF ASTRONOMICAL "NEW MOON".
      READ (7,20,END=260) NEWMUN
   20 FORMAT(5I4)
C  READ DATE FOR WHICH CRESCENT OBSERVATION DATA IS TO BE COMPUTED
  100 READ (7,105,END=260) IYEAR,IMONTH,IDATE,HIJDAT
  105 FORMAT(3I4,2X,5A4)
C  TEST IF END OF SET OF DATES FOR WHICH PRESENT "NEW MOON" TIME
C  IS APPLICABLE. END SENTINEL HAS YEAR = 0 IN DATE.
      IF (IYEAR.EQ.0) GO TO 10
C  NOT A SENTINEL BUT A GOOD DATE. PRINT TABLE HEADING AND COMPUTE.
      WRITE (6,108) HIJDAT,MONTH(IMONTH),IDATE,IYEAR
  108 FORMAT('1',40X,'DATA  FOR  CRESCENT  OBSERVATION'/,
     1  '0','START OF ',5A4/' DATA FOR THE EVENING OF  ',A3,I3,',',I4)
      NUMTH1=NEWMUN(2)/10
      NUMTH2=MOD(NEWMUN(2),10)
      NUMD1=NEWMUN(3)/10
      NUMD2=MOD(NEWMUN(3),10)
      NUMH1=NEWMUN(4)/10
      NUMH2=MOD(NEWMUN(4),10)
      NUMM1=NEWMUN(5)/10
      NUMM2=MOD(NEWMUN(5),10)
      WRITE(6,109) NEWMUN(1),NUMTH1,NUMTH2,NUMD1,NUMD2,NUMH1,
     1     NUMH2,NUMM1,NUMM2
  109 FORMAT(' (NEW MOON PHASE:  ',I4,2('/',2I1),'   ',
     1  2I1,':',2I1,'  UNIVERSAL TIME)')
      WRITE(6,110)
  110 FORMAT('0',63X,'MOON','''','S POSITION AT SUNSET',4X,
     1  'AT CVL TWILT'/60X,32('-'),1X,12('-')/24X,'LAT',5X,
     2  'LONG',2X,'SUNSET',1X,'MOONSET',1X,'CVTWLT',2X,'AGE',
     3  2X,'AZIMTH',1X,'HOR DG',1X,'ALTIT',2X,
     4  'ANGLE',1X,'AZIMTH',1X,'ALTIT',1X,'VSBLITY',2X,'CRIT'
     5  /1X,'PLACE',17X,'DG MN',3X,'DG MN',2X,'HR MN',3X,'HR MN',2X,
     6  'HR MN',2X,'HOURS',1X,'FROM N',1X,'FR SUN',2X,'DEG',
     7  2X,'FR SUN',1X,'FROM N',2X,'DEG',2X,'CHANCES',2X,'DIFF'
     8  /1X,20('-'),2X,6('-'),1X,7('-'),1X,6('-'),1X,7('-'),
     9  1X,6('-'),1X,5('-'),1X,6('-'),1X,6('-'),1X,5('-'),
     A  1X,6('-'),1X,6('-'),1X,5('-'),1X,7('-'),2X,4('-'))
  115 READ (5,120,END=250) NAME,LATD,LATM,LONGD,LONGM,
     1   TZONE,IDST
  120 FORMAT(5A4/4I4,F8.0/4X,I4)
      CALL CONST(IYEAR)
      LAT=RADIAN(DEGREE(LATD,LATM))
      LONG=RADIAN(DEGREE(LONGD,LONGM))
C  FIND BEGINNING AND END OF DAYLIGHT SAVING PERIOD
      CALL DAYLIT(IYEAR,LEAP,IDST,BEGDST,FINDST)
C  FIND DAY NUMBER ON GIVEN DATE.
      NDAY=NUMDAY(IYEAR,IMONTH,IDATE,LEAP)
C  FIND SUNSET TIME, CIVIL TWILIGHT TIME, MOON'S POSITION AT
C  SUNSET AND AT CIVIL TWILIGHT, AND MOONSET TIME.
      CALL SUNSET
      CALL CIVIL
      CALL MPOSIT
      CALL MPOS1
      CALL MUNSET
C  PREPARE FOR PRINTING THE OBSERVATIONAL DATA
      LATABS=IABS(LATD)
      SGNLAT=SYM(1)
      IF(LATD.LT.0) SGNLAT=SYM(2)
      LATM1=LATM/10
      LATM2=MOD(LATM,10)
      LNGABS=IABS(LONGD)
      SGNLNG=SYM(4)
      IF (LONGD.LT.0) SGNLNG=SYM(3)
      LONGM1=LONGM/10
      LONGM2=MOD(LONGM,10)
C  PERFORM DAYLIGHT SAVING TIME ADJUSTMENT.
      IF (NDAY.LT.BEGDST .OR. NDAY.GE.FINDST) GO TO 220
      STSUN=STSUN+1.0
      STMUN=STMUN+1.0
      STCVL=STCVL+1.0
  220 IHRSUN=STSUN
C  CONVERT TIMES INTO A.M. OR P.M. HOURS AND (ROUNDED) MINUTES.
      MNSUN=(STSUN-IHRSUN)*60.0+0.5
      IF (MNSUN.LT.60) GO TO 222
      MNSUN=0
      IHRSUN=IHRSUN+1
  222 IHRSUN=IHRSUN-12
      MNSUN1=MNSUN/10
      MNSUN2=MOD(MNSUN,10)
      IHRCVL=STCVL
      MNCVL=(STCVL-IHRCVL)*60.0+0.5
      IF (MNCVL.LT.60) GOTO 223
      MNCVL=0
      IHRCVL=IHRCVL+1
  223 IHRCVL=IHRCVL-12
      MNCVL1=MNCVL/10
      MNCVL2=MOD(MNCVL,10)
      IHRMUN=STMUN
      MNMUN=(STMUN-IHRMUN)*60.0+0.5
      IF (MNMUN.LT.60) GO TO 224
      MNMUN=0
      IHRMUN=IHRMUN+1
  224 AMPM=SYM(5)
      IF (IHRMUN.LE.12) GO TO 230
      AMPM=SYM(6)
      IHRMUN=IHRMUN-12
  230 MNMUN1=MNMUN/10
      MNMUN2=MOD(MNMUN,10)
C  COMPUTE MOON'S AGE AT SUNSET
      AGE=UTSUN-(NEWMUN(5)/60.0+NEWMUN(4))+
     1  (NDAY-NUMDAY(NEWMUN(1),NEWMUN(2),NEWMUN(3),LEAP))*24.0
      IF (IYEAR .EQ. NEWMUN(1)+1) AGE=AGE+(365+LEAP)*24.0
      DAZABS=ABS(DAZIM)
      SGNDAZ=SYM(1)
      IF (DAZIM.LT.0.0) SGNDAZ=SYM(2)
      THRESH=(-0.97143E-2*DAZABS-0.13714E-1)*DAZABS+10.3743
      DIFFER=(MALT-THRESH)/THRESH
      VSBLTY=SOME
C     IF (DIFFER.LT.-0.1) VSBLTY=POOR
      IF (ANGDST.LT.8.0 .OR. AGE.LT.16.0) VSBLTY=POOR
      IF (DIFFER.GT.0.0) VSBLTY=HIGH
      WRITE (6,240) NAME,LATABS,LATM1,LATM2,SGNLAT,LNGABS,LONGM1,
     1  LONGM2,SGNLNG,IHRSUN,MNSUN1,MNSUN2,IHRMUN,MNMUN1,MNMUN2,
     2  AMPM,IHRCVL,MNCVL1,MNCVL2,
     3  AGE,MAZIM,DAZABS,SGNDAZ,MALT,ANGDST,MAZIM1,MALT1,VSBLTY
     4  ,DIFFER
  240 FORMAT(1X,5A4,2X,I2,':',2I1,A1,1X,I3,':',2I1,A1,1X,I2,':',2I1,
     1  'P',2X,I2,':',2I1,A1,1X,I2,':',2I1,'P',
     2  1X,F5.1,1X,F5.1,'W',1X,F5.1,A1,1X,F5.1,1X,
     3  F5.1,2X,F5.1,'W',1X,F5.1,2X,A6,1X,F05.2)
      GO TO 115
  250 REWIND 5
      GO TO 100
  260 WRITE(6,270)
C SKA 2011-08-02, DON'T PRINT EMPTY PAGE AT END
C 270 FORMAT('1')
  270 FORMAT(' ')
      STOP
      END
C
C
      FUNCTION NUMDAY(Y,M,D,LEAP)
C  RETURNS DAY NO. IN YEAR Y OF DATE D IN MONTH M
C    LEAP=1 IF YEAR IS LEAP, 0 IF NON-LEAP
      INTEGER Y,M,D,LEAP
      NUMDAY=D+(M-1)*30+5*M/9-(M+7)/10*(2-LEAP)
      RETURN
      END
C
C
      SUBROUTINE MPOSIT
COMPUTES MOON'S POSITION AT SUNSET TIME(NDAY, UNIVERSAL TIME UTSUN)
C  MGHA,MLHA,MDCL = MOON'S GHA,LHA,DECLINATION
C  MALT,MAZIM,ANGDST=MOON'S ALTITUDE,AZIMUTH,ANGULAR DIST FROM SUN
C  DAZIM= MOON'S AZMUTH DIFFERENCE(+ IF NORTH) FROM SUN
C  MALT1,MAZIM1=MOON'S ALTITUDE,AZIMUTH AT END OF CIVIL TWILIGHT
      REAL LAT,LONG,LONGH,TZONE
      REAL MGHA,MLHA,MDCL,MAZIM,MALT,MAZIM1,MALT1
      COMMON /MATH/ PI
      COMMON/POSN/LAT,LATD,LATM,LONG,LONGD,LONGM,TZONE
      COMMON /TIMES/ NDAY,STSUN,UTSUN,STMUN,STCVL,UTCVL
      COMMON /COORD/ SDCL,SLHA,SAZIM,MGHA,MDCL,MLHA,MALT,MAZIM,
     1   DAZIM,ANGDST,MAZIM1,MALT1
C     NAMELIST/MPOS/NDAY,UTSUN,DAYS,MGHA,MLHA,MDCL,MALT,MAZIM,
C    1   SAZIM,DAZIM,ANGDST
      CALL MHADCL(UTSUN)
      MLHA=MGHA-LONG
      MALT=ASIN(SIN(MDCL)*SIN(LAT)+COS(MDCL)*COS(LAT)*COS(MLHA))
      MAZIM=ABS(ATAN2(SIN(MLHA),COS(LAT)*TAN(MDCL)-SIN(LAT)*COS(MLHA)))
      SLHAR=SLHA*PI/12.0
      SAZIM=ABS(ATAN2(SIN(SLHAR),COS(LAT)*TAN(SDCL)-SIN(LAT)
     1  *COS(SLHAR)))
      DAZIM=SAZIM-MAZIM
C     ALTSUN=-(0.833333+1.17/60.0*SQRT(HEIGHT))*PI/180.0
      ALTSUN=-0.833333*PI/180.0
      ANGDST=ACOS(SIN(ALTSUN)*SIN(MALT)+COS(ALTSUN)*COS(MALT)*
     1   COS(DAZIM))*180.0/PI
      MALT=MALT*180.0/PI
      MAZIM=MAZIM*180.0/PI
      DAZIM=DAZIM*180.0/PI
C     WRITE(6,MPOS)
      RETURN
      ENTRY MPOS1
COMPUTES MOON'S POSITION AT END OF CIVIL TWILIGHT
      CALL MHADCL(UTCVL)
      MLHA=MGHA-LONG
      MALT1=ASIN(SIN(MDCL)*SIN(LAT)+COS(MDCL)*COS(LAT)*COS(MLHA))
     1  *180.0/PI
      MAZIM1=ABS(ATAN2(SIN(MLHA),COS(LAT)*TAN(MDCL)-SIN(LAT)*
     1  COS(MLHA)))*180.0/PI
      RETURN
      END
C
C
      SUBROUTINE MUNSET
COMPUTES TIME OF MOONSET ON GIVEN DATE
C  UTMUN,STMUN=UNIVERSAL TIME(IN DAYS),STANDARD TIME(IN HRS) OF MOONSET
C  UTSUN=UNIV. TIME OF SUNSET, USED AS FIRST APPROX. TO MOONSET TIME
      REAL MHGA0,MGHA1,MLHA0,MLHA1
      REAL LAT,LONG,LONGH,TZONE
      REAL MGHA,MLHA,MDCL,MAZIM,MALT,MAZIM1,MALT1
      COMMON /MATH/ PI
      COMMON/POSN/LAT,LATD,LATM,LONG,LONGD,LONGM,TZONE
      COMMON /TIMES/ NDAY,STSUN,UTSUN,STMUN,STCVL,UTCVL
      COMMON /COORD/ SDCL,SLHA,SAZIM,MGHA,MDCL,MLHA,MALT,MAZIM,
     1   DAZIM,ANGDST,MAZIM1,MALT1
      DOUBLE PRECISION DAYS
      STMUN=1.0E7
      UTMUN=UTSUN/24.0
      DAYS=NDAY+UTMUN
      CALL MHADCL(UTSUN)
      MGHA1=MGHA
      MLHA0=MGHA1-LONG
      DELHA=347.81*PI/180.0
C     ZMOON=PI/180.0*(89.87+SQRT(HEIGHT)*1.17/60.0)
      ZMOON=PI/180.0*89.87
      COSLHA=(COS(ZMOON)-SIN(LAT)*SIN(MDCL))/COS(LAT)/COS(MDCL)
      IF (ABS(COSLHA).GT.1.0) RETURN
      MLHA1=ACOS(COSLHA)
      DELTIM=(MLHA1-MLHA0)/DELHA
      IF (DELTIM.LT. -0.5) DELTIM=DELTIM+2.0*PI/DELHA
      IF (DELTIM.GT. +0.5) DELTIM=DELTIM-2.0*PI/DELHA
      UTMUN=UTMUN+DELTIM
   10 IF (DELTIM.LT.0.005) GOTO 20
      MGHA0=MGHA1
      MLHA0=MLHA1
      CALL MHADCL(UTMUN*24.0)
      MGHA1=MGHA
      DELHA=(MGHA1-MGHA0)/DELTIM
      IF (DELHA.LT.0.0) DELHA=DELHA+2.0*PI/DELTIM
      COSLHA=(COS(ZMOON)-SIN(LAT)*SIN(MDCL))/COS(LAT)/COS(MDCL)
      IF (ABS(COSLHA).GT.1.0) RETURN
      MLHA1=ACOS(COSLHA)
      DELTIM=(MLHA1-MLHA0)/DELHA
      UTMUN=UTMUN+DELTIM
      GO TO 10
   20 STMUN=UTMUN*24.0-TZONE
      RETURN
      END
C
C
      SUBROUTINE DAYLIT(YEAR,LEAP,IDST,BEGIN,FINISH)
C  FINDS WHETHER YEAR IS LEAP (LEAP = 1 IF YES, 0 IF NO).
C  IF IDST IS NON-ZERO, THEN ALSO
C  COMPUTES DAY NOS. FOR DAYLIGHT SAVINGS TIME START AND END.
C  DAY NO. OF FIRST SUNDAY OF APRIL (BEGIN) AND
C  DAY NO. OF SATURDAY BEFORE LAST SUNDAY OF OCTOBER (FINISH).
C  IF IDST IS ZERO (DAYLIGHT SAVING TIME NOT OBSERVED), THEN MAKES
C  RANGE OF DAYLIGHT DAYS EMPTY BY SETTING BEGIN,FINISH=367,0
      INTEGER YEAR,BEGIN,FINISH,APR1,OCT31
      LEAP=0
      M4=MOD(YEAR,400)
      M1=MOD(YEAR,100)
      IF (M4.EQ.0 .OR. M1.NE.0 .AND. MOD(YEAR,4).EQ.0) LEAP=1
      IF (IDST.NE.0) GO TO 10
C  DAYLIGHT SAVING TIME NOT OBSERVED. SET DAYLIGHT RANGE TO EMPTY
      BEGIN=367
      FINISH=0
      RETURN
C  JAN0,APR1,OCT31 = DAY OF WEEK ON THOSE DATES (FRI=0,SAT=1,SUN=2,...)
C  NAPR1,NOCT31 = NO. OF DAY IN YEAR ON THOSE DATES
   10 JAN0=MOD(M4/100*124+1+M1+M1/4-LEAP,7)
      NAPR1=31+28+LEAP+31+1
      NOCT31=365+LEAP-31-30
      APR1=MOD(NAPR1+JAN0,7)
      OCT31=MOD(NOCT31+JAN0,7)
      BEGIN=NAPR1+2-APR1
      IF (BEGIN.LT.NAPR1) BEGIN=BEGIN+7
      FINISH=NOCT31+2-OCT31
      IF(FINISH.GT.NOCT31) FINISH=FINISH-7
      FINISH=FINISH-1
      RETURN
      END
C
C
      SUBROUTINE MHADCL(UT)
C  COMPUTES MOON'S GHA AND DECL AT UNIV. TIME UT ON NDAY
C  USES SERIES VALID FOR PERIOD 1800-1900 APPROXIMATELY
C  REFERENCE: ALMANAC FOR COMPUTERS, 1978. (WE HAVE TRUNCATED THE
C  SERIES TO OBTAIN SUFFICIENT PRECISION FOR OUR PURPOSE)
      REAL LAT,LONG,LONGH,TZONE ,LTSUN
      REAL MGHA,MLHA,MDCL,MAZIM,MALT,MAZIM1,MALT1
      COMMON /MATH/ PI
      COMMON/POSN/LAT,LATD,LATM,LONG,LONGD,LONGM,TZONE
      COMMON /TIMES/ NDAY,STSUN,UTSUN,STMUN,STCVL,UTCVL
      COMMON /COORD/ SDCL,SLHA,SAZIM,MGHA,MDCL,MLHA,MALT,MAZIM,
     1   DAZIM,ANGDST,MAZIM1,MALT1
      DOUBLE PRECISION DMOD,DATAN
      DOUBLE PRECISION T,DPI,DRAD,DEGREE,DDEG,SEC,DX
      DOUBLE PRECISION G0,A0,C0,N0,D0,B0,E0,W0,GMST0,DG,DA,DC,DN,DD,
     1  DB,DE,DW,DGMST
      REAL G,A,C,N,D,B,E,W,GMST,MRA
      DRAD(DEGREE)=DMOD(DEGREE,360.0D0)*DPI/180.0D0
      DDEG(IDEG,MIN,SEC)=SEC/3600.0D0+MIN/60.0D0+IDEG
      DHOUR(IHOUR,MIN,SEC)=DDEG(IHOUR,MIN,SEC)
      DAYS=NDAY+UT/24.0
      G=DRAD(G0+DAYS*DG)
      A=DRAD(A0+DAYS*DA)
      C=DRAD(C0+DAYS*DC)
      N=DRAD(N0+DAYS*DN)
      D=DRAD(D0+DAYS*DD)
      B=DRAD(B0+DAYS*DB)
      E=DRAD(E0+DAYS*DE)
      W=DRAD(W0+DAYS*DW)
      GMST=DRAD(GMST0+15.0410686395D0*UT+NDAY*DGMST)
      THETA=-0.01434*SIN(G+B-2*D+N)-0.01652*SIN(A+G+B-2*D+N)
     1 -0.01868*SIN(2*A+B-2*D+N)+0.027*SIN(2*A+B+N)-0.02994*SIN(A-B-2*D)
     2 -0.03759*SIN(G+B+N)-0.03982*SIN(G-B-N)+0.04732*SIN(B+2*D+N)
     3 -0.04771*SIN(B-N)-0.06505*SIN(A+B-2*D)+0.13622*SIN(A+B)
     4 -0.14511*SIN(A-B-2*D-N)-0.18354*SIN(B-2*D)-0.20017*SIN(B-2*D+N)
     5 -0.38899*SIN(A+B-2*D+N)+0.40248*SIN(A-B)+0.65973*SIN(A+B+N)
     6 +1.96763*SIN(A-B-N)+4.95372*SIN(B)+23.89684*SIN(B+N)
      RHO=1.50534*COS(A-2*B)-1.67417*COS(A+2*D)+1.99463*COS(A+G)
     1 +2.07579*COS(D)-2.455*COS(A-G)-2.74067*COS(A+G-2*D)
     2 -3.83002*COS(G-2*D)-5.37817*COS(2*A)+6.60763*COS(2*A-2*D)
     3 -53.97626*COS(2*D)-68.62152*COS(A-2*D)-395.1367*COS(A)+3649.337
      PHI=0.01122*SIN(A+2*D)+0.01410*SIN(A-2*D-N)
     1 +0.0141*SIN(A+2*B-2*D+N)+0.01424*SIN(A-2*B)
     2 +0.01506*SIN(A-2*B-2*D-2*N)-0.01567*SIN(2*B-2*D)
     3 +0.02077*SIN(2*B-2*D+2*N)-0.02527*SIN(A+G)-0.02952*SIN(A-N)
     4 -0.02952*SIN(A+2*B+N)-0.03487*SIN(D)+0.03684*SIN(A-G)
     5 -0.03983*SIN(2*D+N)+0.03983*SIN(2*B-2*D+N)
     6 +0.04037*SIN(A+2*B-2*D+2*N)+0.04221*SIN(2*A)-0.04273*SIN(G-2*D)
     7 -0.05566*SIN(2*A-2*D)-0.05697*SIN(A+G-2*D)-0.06846*SIN(A+2*B+2*N)
     8 -0.08724*SIN(A-2*B-N)-0.08724*SIN(A+N)-0.11463*SIN(2*B)
     9 -0.18647*SIN(G)-0.20417*SIN(A-2*B-2*N)+0.59616*SIN(2*D)
     A +1.07142*SIN(N)-1.07447*SIN(2*B+N)-1.28658*SIN(A-2*D)
     B -2.47970*SIN(2*B+2*N)+6.32962*SIN(A)
      MRA=C+ASIN(PHI/SQRT(RHO-THETA*THETA))
      MDCL=ASIN(THETA/SQRT(RHO))
      MGHA=AMOD(GMST-MRA+2.0*PI,2.0*PI)
      RETURN
C
C
      ENTRY CONST(NYEAR)
C
C COMPUTES ASTRO CONSTANTS FOR JAN 0 OF GIVEN YEAR
C  NDAYS = TIME FROM 12 HR(NOON), JAN 0, 1900 TO 0 HR, JAN 0 OF NYEAR
C  T = SAME IN JULIAN CENTURIES(UNITS OF 36525 DAYS)
      DPI=DATAN(1.0D0)*4.0D0
      PI=DPI
      NDAYS=(NYEAR-1900)*365+(NYEAR-1901)/4
      T=(NDAYS-0.5D0)/36525.0D0
      G0=DMOD(-1.5D-4*T*T+358.475833D0+35999.04975D0*T,360.0D0)
      A0=DMOD(9.192D-3*T*T+296.104608D0+477198.849108D0*T,360.0D0)
      C0=DMOD(-1.133D-3*T*T+270.434164D0+481267.883142D0*T,360.0D0)
      N0=DMOD(2.078D-3*T*T+259.183275D0-1934.142008D0*T,360.0D0)
      D0=DMOD(-1.436D-3*T*T+350.737486D0+445267.114217D0*T,360.0D0)
      B0=DMOD(-3.211D-3*T*T+11.250889D0+483202.02515D0*T,360.0D0)
      E0=DMOD(98.998753D0+35999.372886D0*T,360.0D0)
      W0=DMOD(3.1D-4*T*T+342.767053D0+58519.211911D0*T,360.0D0)
      GMST0=DMOD(3.03D-4*T*T+99.6909833D0+36000.76892D0*T,360.0D0)
      DG=35999.04975D0/36525.0D0
      DA=477198.849108D0/36525.0D0
      DC=481267.883142D0/36525.0D0
      DN=-1934.142008D0/36525.0D0
      DD=445267.114217D0/36525.0D0
      DB=483202.02515D0/36525.0D0
      DE=35999.372886D0/36525.0D0
      DW=58519.211911D0/36525.0D0
      DGMST=36000.76892D0/36525.0D0
C
C COMPUTE CONSTANTS OF SUN'S MOTION FOR JAN 0 OF GIVEN YEAR
C
C  NDAYS = TIME FROM 12 HR(NOON), JAN 0, 1900 TO 0 HR, JAN 0 OF NYEAR
C  T = SAME IN JULIAN CENTURIES(UNITS OF 36525 DAYS)
C  OBL = OBLIQUITY OF ECLIPTIC
C  DG,DGMST,DELSID = DAILY MOTION (CHANGE) IN SUN'S ANOMALY,
C       SUN'S MEAN LONGITUDE, SIDEREAL TIME
C  G0,SMLONG0,SIDTM0 = SUN'S MEAN ANOMALY, SUN'S MEAN LONGITUDE,
C       SIDEREAL TIME, ALL AT 0 HR, JAN 0 OF YEAR NYEAR
C  C1,C2 = COEFFICIENTS IN EQUATION OF CENTER
      OBL=DRAD(DDEG(23,27,8.26D0)-DDEG(0,0,46.845D0)*T)
      SMLNG0=DMOD(3.03D-4*T*T+279.696678D0+36000.76892D0*T,360.0D0)
      DELSID=DHOUR(2400,3,4.542D0)/36525.0D0
      DX=DHOUR(6,38,45.836D0)+DMOD(DHOUR(2400,3,4.542D0)*T,24.0D0)
      SIDTM0=DMOD(DX,24.0D0)
      C1=DRAD(DDEG(1,55,10.057D0)-DDEG(0,0,0.052D0)*T*T-
     1  DDEG(0,0,17.24D0)*T)
      C2=DRAD(DDEG(0,1,12.338D0)-DDEG(0,0,0.361D0)*T)
C     WRITE(6,CONSTS)
      RETURN
C
      ENTRY SUNSET
C     NAMELIST/SNST/LONGH,LTSUN,NDAY,DAYS,SLONG,RA,SDCL,SLHA,UTSUN,
C    1  STSUN
C  SMLNG = SUN'S MEAN LONGITUDE AT TIME0,  SLONG =  TRUE LONGITUDE
C  RA = SUN'S RIGHT ASCENSION, SINDCL = SIN(SUN'S DECLINATION)
C  SLHA = SUN'S LOCAL HOUR ANGLE WEST
C  LTSUN,STSUN,UTSUN = LOCAL, STANDARD, UNIVERSAL TIME OF SUNSET
      LONGH=LONG*12./PI
      LTSUN=18.0
      DO 10 I=1,2
      DAYS=NDAY+(LTSUN+LONGH)/24.0
      ANOMLY=DRAD(G0+DG*DAYS)
      SMLNG=DRAD(SMLNG0+DGMST*DAYS)
      SLONG=SMLNG+C1*SIN(ANOMLY)+C2*SIN(ANOMLY*2)
      RA=ATAN2(COS(OBL)*SIN(SLONG),COS(SLONG))*12.0/PI
      IF (RA.LT.0.) RA=RA+24.0
      SINDCL=SIN(OBL)*SIN(SLONG)
      SDCL=ASIN(SINDCL)
C     ZSUN=(90.83+1.17/60.0*SQRT(HEIGHT))*PI/180.0
      ZSUN=90.83*PI/180.0
      COSHA=(COS(ZSUN)-SINDCL*SIN(LAT))/(SQRT(1.0-SINDCL**2)*COS(LAT))
C  IF COS(SLHA)>1, THEN TIME CANNOT BE EVALUATED
      IF (ABS(COSHA).GT.1.0) RETURN
      SLHA=ACOS(COSHA)*12.0/PI
      LTSUN=SLHA+RA-DELSID*DAYS-SIDTM0
      IF (LTSUN.LT.0.) LTSUN=LTSUN+24.0
      IF (LTSUN.GT.24.0) LTSUN=LTSUN-24.0
   10 CONTINUE
      UTSUN=LTSUN+LONGH
      STSUN=UTSUN-TZONE
C     WRITE(6,SNST)
      RETURN
C
      ENTRY CIVIL
COMPUTES TIME OF END OF CIVIL TWILIGHT (SUN'S ZENITH DIST = 96 DEG)
C  THIS ROUTINE MUST BE CALLED AFTER CALLING SUNSET
C  SMLNG,SLONG,RA,SINDCL,SLHA AS ABOVE (FOR SUNSET ABOVE)
C  LTSUN,STCVL,UTCVL = LOCAL,STANDARD,UNIVERSAL TIME OF CIVIL TWILIGHT
      COSHA=(-0.1045285-SINDCL*SIN(LAT))/(SQRT(1.0-SINDCL**2)*COS(LAT))
C  IF COS(SLHA)>1, THEN TIME CANNOT BE EVALUATED
      IF (ABS(COSHA).GT.1.0) RETURN
      LTSUN=ACOS(COSHA)*12.0/PI+RA-DELSID*DAYS-SIDTM0
      IF (LTSUN.LT.0.) LTSUN=LTSUN+24.0
      IF (LTSUN.GT.24.0) LTSUN=LTSUN-24.0
      UTCVL=LTSUN+LONGH
      STCVL=UTCVL-TZONE
      RETURN
      END

